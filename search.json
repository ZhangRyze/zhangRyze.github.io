[{"title":"第“一”次博客的经历","url":"%2F2018%2F03%2F15%2FcreateBlogExperience%2F","content":"\n### 写在开始之前\n现在是第二次折腾博客了，我在想究竟该这么样开头呢，倒也没想过自己折腾的这个东西会有多少人开过，结束之后写在开始之前的东西，无非是多少年后回过头来告诉自己，做过，倒也不需要多认真。\n\n说起来可能得鄙视一下自己了，老早就想有个自己的网站，后来接触了前端这个想法也愈渐浓烈，去年差不多这个时候突然就开始折腾这个博客了，然后就开始查资料（PS：emme，菜鸟一个，英语也不好，幸好我大天朝有度娘，要善用搜索引擎），好了正题开始，第一次搭建博客是用 Github pages & jeklly。\n### Github pages\n[GitHub Pages](https://pages.github.com) 本用于介绍托管在 GitHub 的项目，不过，每个 Github 用户都有 300M 免费稳定的空间，还可以绑定自己的域名，用来做搭建一个博客再好不过了，而且使用Git管理，方便且快捷。\n### 首先注册一个 Github 账户\n基于Github pages的博客，当然必须有GitHub的帐号，该帐号将用来创建项目，默认域名为 `github.com/UserName`，项目域名为 `github.com/UserName/ProjectName`。\n\n> 下面涉及到的一些命令凡是更用户名和项目名有关的一律会用这里的`UserName`和`ProjectName`代替，注意替换\n\n访问：[http://www.github.com](http://www.github.com/)，注册你的Github账户，注册需要填写`UserName`、`邮箱`（`UserName`和`邮箱`都可以登录），注册邮箱十分重要，GitHub上很多通知都是通过邮箱的。比如你的主页上传并构建成功会通过邮箱通知，更重要的是，如果构建失败的话也会在邮件中说明原因。\n### 创建项目仓库\n在搭建博客之前，还需要用刚才注册的帐号创建一个项目，在Git中，项目被称为仓库(`Repository`)，仓库顾名思义，当然可以包含代码或者非代码。将来我们的网页或者模板实际上都是保存在这个仓库中的。\n\n![创建项目仓库](createBlogExperience/create-project.png)\n\n仓库创建好后，我们还需要一个管理工具去管理你的仓库。其实使用 git 命令行工具就完全足够了，图形化工具，都只不过是命令行的封装。就功能而言，他们能做的，命令行全部可以做到。`但命令行能做的，他们不一定可以做到`，命令行更加原生、本色，跨越平台。建议熟悉 git 命令行工具。\n\n但图形化工具也有自己的优点，就是直观。\n\n这里先省略使用Git客户端的安装和基本技巧，后面博客的搭建需要熟练的使用Git技巧，如果不熟悉，请移步到[Git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)，[Git使用教程图文详解](http://blog.csdn.net/dl425134845/article/details/50997357)，或者自行度娘。\n### 配置和使用 GitHub\n我们如何让本地 git 项目与远程的 GitHub 建立联系呢？用 SSH keys。\n\n###### 配置 SSH keys\n首先我们需要检查你电脑上现有的 ssh key：\n\n\n```bash\n$ cd ~/.ssh 检查本机的ssh密钥\n```\n\n> 如果提示：No such file or directory 说明你是第一次使用 git。\n\n###### 生成新的 SSH Key：\n\n```bash\n$ ssh-keygen -t rsa -C \"邮件地址@youremail.com\"\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):<回车就好>\n```\n> 注意 1: 此处的邮箱地址，你可以输入自己的邮箱地址；\n> 注意2: 此处的「-C」的是大写的「C」；\n\n然后系统会要你输入密码：\n\n```bash\nEnter passphrase (empty for no passphrase):<输入加密串>\nEnter same passphrase again:<再次输入加密串>\n```\n在回车中会提示你输入一个密码，这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。这个设置是防止别人往你的项目里提交内容。\n\n注意：输入密码的时候没有 * 字样的，你直接输入就可以了。\n\n最后看到这样的界面，就成功设置 `ssh key` 了。\n\n###### 添加 SSH Key 到 GitHub：\n在本机设置 SSH Key 之后，需要添加到 GitHub上，以完成 SSH 链接的设置。\n\n* 打开本地 id_rsa.pub 文件。\n\n> 参考地址 C:\\Documents and Settings\\Administrator.ssh\\id_rsa.pub，此文件里面内容为刚才生成的密钥。如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。\n\n* 登陆 GitHub 系统。点击右上角的 `Account Settings`—>`SSH Public keys` —> `add another public keys`。\n* 把你本地生成的密钥复制到 `key` 文本框中，点击 `add key` 就ok了。\n\n###### 测试\n可以输入下面的命令，看看设置是否成功，`git@GitHub.com` 的部分不要修改：\n\n```bash\n$ ssh -T git@GitHub.com\n```\n如果是下面的反馈：\n\n```bash\nThe authenticity of host 'GitHub.com (207.97.227.239)' can't be established. RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48. Are you sure you want to continue connecting (yes/no)? \n```\n不要紧张，输入 yes 就好，然后会看到：\n\n```bash\nHi cnfeat! You've successfully authenticated, but GitHub does not provide shell access. \n```\n###### 设置用户信息\n现在你已经可以通过 SSH 链接到 GitHub 了，还有一些个人信息需要完善的。\n\nGit 会根据用户的名字和邮箱来记录提交。GitHub 也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字必须是你的真名，而不是GitHub的昵称。\n\n* Git Win 平台操作\n    - 开始菜单 Git Bash\n    - 鼠标右键打开 Git Bash\n* Git Mac 平台操作\n    - 安装 Git 之后可直接在 Terminal 操作\n\n```bash\n$ git config --global user.name \"UserName\"//用户名\n$ git config --global user.email  \"xxxx@gmail.com\"//填写自己的邮箱\n```\n###### SSH Key 配置成功\n本机已成功连接到 GitHub。\n\n###### 常见错误请参考\n* [GitHub Help - Generating SSH Keys](https://help.github.com/articles/connecting-to-github-with-ssh/)\n* [GitHub Help - Error Permission denied (publickey)](https://help.github.com/articles/error-permission-denied-publickey/)\n\n### 使用 GitHub Pages 建立个人主页\n在与 GitHub 建立好链接之后，就可以方便的使用它提供的Github Pages 服务，GitHub Pages 分两种，一种是你的 GitHub 用户名建立的 UserName.GitHub.io 这样的用户页（站），另一种是依附项目的 Pages。\n\n想建立个人博客是用的第一种，形如 [zhangRyze.GitHub.io](https://zhangryze.github.io/) 这样的可访问的站，每个用户名下面只能建立一个，而且仓库的名字必须是 `UserName/UserName.github.io`，这是特殊的命名约定。\n\n> 需要注意的个人主页的网站内容是在master分支下的。\n\n最后在 `UserName/UserName.github.io` 仓库根目录中需要 `index.html` 的文件，写入简单的html代码，你就可以通过`http://UserName.github.io`来访问到你的主页，可以看到你刚才写入的代码。\n\n> 想要搭建完整的博客系统需要用到 `jeklly` （用于生成静态网页的工具），咱们下回分解。\n\n---\n\n##### 以上内容参考大神博文：\n* [一步步在GitHub上创建博客主页 全系列](http://www.pchou.info/ssgithubPage/2013-01-03-build-github-blog-page-01.html)  by @pchou\n* [如何搭建一个独立博客——简明Github Pages与jekyll教程](http://www.cnfeat.com/blog/2014/05/11/how-to-build-a-blog/) by @cnfeat\n\n\n\n\n","tags":["Git"],"categories":["自个儿折腾"]}]